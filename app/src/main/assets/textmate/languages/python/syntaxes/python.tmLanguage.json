{
    "name": "Python",
    "scopeName": "source.python",
    "fileTypes": ["py", "pyw", "pyi"],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#classes"
        },
        {
            "include": "#decorators"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.python",
                    "match": "#.*$"
                },
                {
                    "name": "comment.multiline.string.python",
                    "begin": "\"\"\"",
                    "end": "\"\"\"",
                    "contentName": "string.quoted.triple.python"
                },
                {
                    "name": "comment.multiline.string.python",
                    "begin": "'''",
                    "end": "'''",
                    "contentName": "string.quoted.triple.python"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.single.python",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.python",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.python",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.python",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.python",
                    "begin": "r'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double.python",
                    "begin": "r\"",
                    "end": "\""
                },
                {
                    "name": "string.quoted.triple.single.python",
                    "begin": "'''",
                    "end": "'''"
                },
                {
                    "name": "string.quoted.triple.double.python",
                    "begin": "\"\"\"",
                    "end": "\"\"\""
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.flow.python",
                    "match": "\\b(if|elif|else|for|while|break|continue|return|yield|try|except|finally|raise|with|assert|pass|lambda|match|case)\\b"
                },
                {
                    "name": "keyword.other.python",
                    "match": "\\b(def|class|global|nonlocal|import|from|as|async|await)\\b"
                },
                {
                    "name": "storage.type.function.python",
                    "match": "\\b(def)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": { "name": "storage.type.function.python" },
                        "2": { "name": "entity.name.function.python" }
                    }
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.language.python",
                    "match": "\\b(True|False|None|NotImplemented|Ellipsis|__debug__)\\b"
                },
                {
                    "name": "constant.numeric.integer.python",
                    "match": "\\b(\\d+)\\b"
                },
                {
                    "name": "constant.numeric.float.python",
                    "match": "\\b(\\d+\\.\\d*)\\b"
                },
                {
                    "name": "constant.numeric.hex.python",
                    "match": "\\b(0[xX][0-9a-fA-F]+)\\b"
                },
                {
                    "name": "constant.numeric.octal.python",
                    "match": "\\b(0[oO][0-7]+)\\b"
                },
                {
                    "name": "constant.numeric.binary.python",
                    "match": "\\b(0[bB][01]+)\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": { "name": "entity.name.function.python" }
                    }
                }
            ]
        },
        "classes": {
            "patterns": [
                {
                    "match": "\\b(class)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "captures": {
                        "1": { "name": "keyword.other.python" },
                        "2": { "name": "entity.name.class.python" }
                    }
                }
            ]
        },
        "decorators": {
            "patterns": [
                {
                    "match": "^\\s*(@)([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)",
                    "captures": {
                        "1": { "name": "punctuation.decorator.python" },
                        "2": { "name": "entity.name.decorator.python" }
                    }
                }
            ]
        }
    }
} 